{
    "caseStudies": [
        {
            "heading": "Bagajob",
            "process": "Bagajob is a web app that I've been working on with some of my former coding bootcamp classmates. It's designed for job seekers to organize and track the applications they've made. It stores a variety of job specific information (salary, closing date, etc.) along with notes on the application and interviews.",
            "challenges": "A challenge this project posed was deciding on what kind of information users would want to store in the app, and how best to display it. After evaluating several ideas, we decided to divide job information into 3 sections: job details, application notes and interview details. This 3 section design then allowed for horizontal scrolling on mobiles, preventing the user from having to scroll too far to access certain information about a job application they're keeping track of.",
            "learnings": "How to create and optimise an intuitive user experience, and how to accurately implement designs and ideas from stakeholders such as the UX Designer and Project Lead."
        },
        {
            "heading": "MeMovie",
            "process": "My aims when building this app were to practice using the Material UI component library, learn Immer and its benefits and build login and register functionality with JSON web tokens.",
            "challenges": "Picking a random movie based on a user's filter requirements posed a challenge, as I had to loop through both objects and arrays in one loop. I used JavsScript's array reduce method to achieve the desired outcome, as it enabled me to use an if statment to check whether the user's filter requirements matched any properties belonging to a movie.",
            "learnings": "Material UI and how to style Material UI components, Immer and how it improves code readability, hooks such as useEffect and useRef, how to authenticate users with JSON web tokens."
        },
        {
            "heading": "Team Generator",
            "process": "When planning this app, I knew I wanted to use a Laravel API in order to seperate concerns between my front end and business logic. I first set out what my MVP would be before wire-framing the layout. I then created the tables, then designed the necessary API routes and HTTP requests based on the MVP. I then planned the Redux actions for both the state and api.",
            "challenges": "Initially I wanted to store team setting data (shirt colour and team names) in the API. However, doing so made for a more clunky and delayed user experience. I realised the settings feature would be a prime use case for Redux, as its data would be rapidly changed and needed to be accessed in other parts of the app. This made for a more seamless UX.",
            "learnings": "This app cemented the process of making API requests in a React app using Axios. With no assistance provided, I refined my ability to utilise as many resources as possible, such as websites like Stack Overflow, notes and tutorials. I also learned how to deploy both my front and backend on Heroku."
        },
        {
            "heading": "Lockdown Olympics",
            "process": "Working in a team of 4, we decided to create an app that provides information for a fictitious 'Lockdown Olympics' event. The app was produced in one week from conception to deployment. Myself and a team mate built the API in a couple of days, creating tables for competitors and sports. I then contributed to the implementation of Redux. I was also tasked with leading the presentation to the rest of the cohort and tutors, where I explained the app and its features.",
            "challenges": "As we were working in a group of 4, a challenge was to ensure everyone's roles were clearly defined, so as not have have two people needlessly working on the same thing. This was handled with regular communication and group meetings, where we shared our prgress and contributed new ideas.",
            "learnings": "Working collaboratively, this gave us experience resolving merge conflicts in Git and making successful pull requests. The backend was deployed on AWS, a process we all learned and played a part in completing."
        },
        {
            "heading": "Laravel Vet Project",
            "process": "Learning and applying the key features of Laravel, I built forms that allowed for adding/updating owners and animals based on user role. We also developed an API with Laravel that can be used to query and update the database (based on OAUTH and user role).",
            "learnings": "The technologies stated on the project card, test driven development, how to construct blade views, how to build an API in Laravel."
        },
        {
            "heading": "Photography Site",
            "process": "For this page I was provided a design in Figma and created the page in HTML and CSS from the ground up during Week 2 of the DevelopeMe_ coding bootcamp. I started with creating a set of re-usable components using atomic design, then built up the full pages to the design specification.",
            "learnings": "Atomic design, CSS Grid and Flexbox, Figma."
        }
    ]
}